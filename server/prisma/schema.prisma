generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id              Int           @id @default(autoincrement())
  email           String        @unique @db.VarChar(255)
  password        String        @db.VarChar(50)
  role            Role          @default(USER)
  medicalCards    MedicalCard[]
  posts           Post[]        @relation("Posts")
  lastEditedPosts Post[]        @relation("LastEditedPosts")
}

model MedicalCard {
  id         Int         @id @default(autoincrement())
  name       String      @db.VarChar(35)
  surname    String?     @default("") @db.VarChar(35)
  genderId   Int
  birthDate  DateTime    @db.Date
  userId     Int
  bloodTests BloodTest[]
  gender     Gender      @relation(fields: [genderId], references: [id])
  user       User        @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([name, surname, userId])
}

model Gender {
  id           Int           @id @default(autoincrement())
  name         String
  medicalCards MedicalCard[]
}

model BloodTest {
  id                Int                @id @default(autoincrement())
  date              DateTime           @default(now()) @db.Date
  medicalCardId     Int
  medicalCard       MedicalCard        @relation(fields: [medicalCardId], references: [id], onDelete: Cascade)
  bloodTestAnalytes BloodTestAnalyte[]

  @@unique([medicalCardId, date])
}

model BloodTestAnalyte {
  id                            Int                         @id @default(autoincrement())
  value                         Float
  bloodTestId                   Int
  bloodTestAnalyteDescriptionId Int
  bloodTest                     BloodTest                   @relation(fields: [bloodTestId], references: [id], onDelete: Cascade)
  bloodTestAnalyteDescription   BloodTestAnalyteDescription @relation(fields: [bloodTestAnalyteDescriptionId], references: [id])

  @@unique([bloodTestId, bloodTestAnalyteDescriptionId])
}

model BloodTestAnalyteDescription {
  id                Int                @id @default(autoincrement())
  name              String             @db.VarChar(50)
  abbreviation      String?
  unit              String
  bloodTestAnalytes BloodTestAnalyte[]
}

enum Role {
  USER
  ADMIN
  EDITOR
}

model Post {
  id             Int      @id @default(autoincrement())
  title          String   @unique @db.VarChar(50)
  description    String   @db.VarChar(50)
  date           DateTime @default(now()) @db.Date
  content        String   @db.VarChar(2000)
  editorId       Int
  lastEditorId   Int
  lastEditedDate DateTime @default(now()) @db.Date
  editor         User     @relation("Posts", fields: [editorId], references: [id])
  lastEditor     User     @relation("LastEditedPosts", fields: [lastEditorId], references: [id])
}
